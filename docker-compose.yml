# docker-compose.yml

version: '3.8'
services:

  postgres:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    volumes:
      - postgres:/var/client/postgresql/data
    ports:
      - '5432:5432'

#  nest-api:
#    build:
#      context: ./
#      dockerfile: apps/nest-api/Dockerfile
#    ports:
#      - 4444:4444
#    depends_on:
#      - "postgres"
#    environment:
#      API_DATABASE_URL: postgres://myuser:mypassword@postgres:5432/sandbox-db


  graphql-engine:
    build:
      context: ./
      dockerfile: apps/gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://myuser:mypassword@postgres:5432/sandbox-db
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://myuser:mypassword@postgres:5432/sandbox-db
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

#  ingres:
#    build:
#      context: ./
#      dockerfile: apps/ingres/Dockerfile
#    ports:
#      - "3000:80"
#    depends_on:
#      - "graphql-engine"

volumes:
  postgres: